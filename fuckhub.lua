                                                                                 local v0=tonumber;    
                                                                        local v1=string.byte;local v2=string.char;local 
                                                                     v3=string.sub;local v4=string.gsub;local v5=string.rep;local 
                                                                 v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=    
                                                            getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall 
                                                          ;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local      
                                                        function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30)   
                                                      if (v1(v30,2)==79) then local v79=0;while true do if (v79==0) then v19=v0(v3(v30,1,1));   
                                                    return "";end end else local v80=0;local v81;while true do if (v80==0) then v81=v2(v0(v30,16) 
                                                  );if v19 then local v108=v5(v81,v19);v19=nil;return v108;else return v81;end break;end end end    
                                                  end);local function v20(v31,v32,v33) if v33 then local v82=(v31/(2^(v32-1)))%(((882 -(282 + 595)) - 
                                                3)^(((v33-(2 -1)) -(v32-(1 -0))) + ((1639 -(1523 + 114)) -(1 + 0)))) ;return v82-(v82%(620 -(555 + 64)) 
                                                ) ;else local v83=((839 + 94) -(857 + 74))^(v32-((810 -241) -(367 + 201))) ;return (((v31%(v83 + v83))>=  
                                              v83) and (928 -(214 + 713))) or (0 + (1065 -(68 + 997))) ;end end local function v21() local v34=v1(v16,v18,  
                                              v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + (1272 -(226 + 1044)) );  
                                            v18=v18 + (8 -6) ;return (v36 * (373 -(32 + 85))) + v35 ;end local function v23() local v37=(350 -(87 + 263)) + 0 
                                             ;local v38;local v39;local v40;local v41;while true do if (v37==(0 + 0)) then v38,v39,v40,v41=v1(v16,v18,v18 + 3 ) 
                                          ;v18=v18 + (961 -(892 + 65)) ;v37=1;end if (v37==(181 -(67 + 113))) then return (v41 * (40022563 -23245347)) + (v40 * ( 
                                          121138 -(40772 + 14830))) + (v39 * (469 -213)) + v38 ;end end end local function v24() local v42=v23();local v43=v23();   
                                          local v44=3 -2 ;local v45=(v20(v43,2 -(3 -2) ,62 -42 ) * ((2 + 0)^((909 -(814 + 45)) -(10 + 8)))) + v42 ;local v46=v20(v43, 
                                          83 -62 ,983 -(802 + 150) );local v47=((v20(v43,85 -(130 -77) )==((1 + 0) -0)) and  -(1 + 0)) or (1 -0) ;if (v46==(997 -(915 
                                         + 82))) then if (v45==(0 -0)) then return v47 * (1486 -(998 + 488)) ;else local v89=0 + 0 + 0 ;while true do if (v89==0) then  
                                        v46=1 -(885 -(261 + 624)) ;v44=0;break;end end end elseif (v46==(3234 --[[==============================]] -(1069 + (209 -91))))  
                                        then return ((v45==(0 -0)) and (v47 * ((773 -(201 + 571))/( --[[============================================]]0 -0)))) or (v47 *  
                                        NaN) ;end return v8(v47,v46-((1258 -(1020 + 60)) + 845) --[[======================================================]] ) * (v44 + (   
                                      v45/((3 -1)^((1475 -(630 + 793)) + (0 -0))))) ;end    --[[==========================================================]]local function    
                                      v25(v48) local v49=0 -(0 + 0) ;local v50;local v51; --[[==============================================================]]while true do   
                                      if (v49==((1055 -(87 + 968)) + 0)) then v50=nil;if  --[[================================================================]]  not v48 then  
                                      local v100=0;while true do if (v100==0) then v48=   --[[==================================================================]]v23();if (v48 
                                      ==(0 -0)) then return "";end break;end end end v49= --[[==================================================================]]1748 -(760 +      
                                    987) ;end if (v49==3) then return v6(v51);end if (v49 --[[====================================================================]]==(1915 -(    
                    1789 + 124))) then v51={};for v90=767 -(745 + 21) , #v50 do v51[v90]= --[[====================================================================]]v2(v1(v3(v50,   
              v90,v90)));end v49=2 + 1 ;end if (v49==(2 -1)) then v50=v3(v16,v18,(v18 +   --[[======================================================================]]v48) -(3 -2)  
            );v18=v18 + v48 ;v49=(4 -3) + 1 ;end end end local v26=v23;local function v27 --[[======================================================================]](...) return  
          {...},v12("#",...);end local function v28() local v52=1749 -(1013 + 736) ;local --[[======================================================================]] v53;local    
        v54;local v55;local v56;local v57;local v58;while true do if (v52==1) then local  --[[======================================================================]]v86=0 + 0 ;   
        local v87;while true do if (v86~=(0 + 0)) then else v87=1171 -(418 + 753) ;while  --[[======================================================================]]true do if (0 
      ~=v87) then else v57=v23();v58={};v87=1 + 0 ;end if (v87==2) then v52=4 -2 ;break;  --[[======================================================================]]end if ((3 -2 
      )~=v87) then else for v111=868 -(550 + 317) ,v57 do local v112=0 + 0 ;local v113;     --[[==================================================================]]local v114;     
      local v115;while true do if (v112~=1) then else v115=nil;while true do if (0==v113)   --[[================================================================]]then local v125=0 
     -0 ;while true do if (1~=v125) then else v113=530 -(406 + 123) ;break;end if (v125==0) --[[==============================================================]] then v114=v21(); 
    v115=nil;v125=1 -0 ;end end end if (v113==(2 -1)) then if (v114==1) then v115=v21()~=(285 --[[==========================================================]] -(134 + 151)) ;    
    elseif (v114==(1667 -(970 + 695))) then v115=v24();elseif (v114==3) then v115=v25();end v58 --[[====================================================]][v111]=v115;break;end   
    end break;end if (v112~=(0 -0)) then else v113=0;v114=nil;v112=1;end end end v56[2 + 1 ]=v21( --[[==============================================]]);v87=1992 -(582 + 1408)  
    ;end end break;end end end if (v52==(6 -4)) then for v92=1 -0 ,v23() do local v93=v21();if (v20(  --[[====================================]]v93,1,3 -2 )~=(1824 -(1195 +  
    629))) then else local v103=0 -0 ;local v104;local v105;local v106;local v107;while true do if (v103  --[[========================]]==1) then v106=nil;v107=nil;v103=243  
    -(187 + 54) ;end if (v103~=(1 + 1)) then else while true do if (v104~=(782 -(162 + 618))) then else local v116=0;local v117;while true do if (v116==(0 + 0)) then v117= 
  0;while true do if (v117==(1 + 0)) then v104=3;break;end if (v117==(0 -0)) then if (v20(v106,1,1 -0 )==(2 -1)) then v107[2 -0 ]=v58[v107[2]];end if (v20(v106,2,586 -(  
  57 + 527) )==1) then v107[1430 -(41 + 1386) ]=v58[v107[3]];end v117=104 -(17 + 86) ;end end break;end end end if (v104~=0) then else local v118=0 + 0 ;local v119;    
  while true do if (v118~=(1636 -(1373 + 263))) then else v119=0 -0 ;while true do if (v119~=(1001 -(451 + 549))) then else v104=1;break;end if (v119~=0) then else v105= 
  v20(v93,1 + 1 ,3);v106=v20(v93,5 -1 ,6);v119=1 -0 ;end end break;end end end if (v104~=1) then else local v120=0 -0 ;local v121;while true do if (0~=v120) then else    
  v121=1384 -(746 + 638) ;while true do if (v121==(0 + 0)) then v107={v22(),v22(),nil,nil};if (v105==(0 -0)) then local v276=0 + 0 ;local v277;while true do if ((560 -(  
  306 + 254))==v276) then v277=0 + 0 ;while true do if ((0 -0)~=v277) then else v107[1470 -(899 + 568) ]=v22();v107[1261 -(1043 + 214) ]=v22();break;end end break;end    
  end elseif (v105==1) then v107[2 + 1 ]=v23();elseif (v105==(4 -2)) then v107[1215 -(323 + 889) ]=v23() -(2^(619 -(268 + 335))) ;elseif (v105==3) then local v384=290 -( 
  60 + 230) ;while true do if ((580 -(361 + 219))~=v384) then else v107[323 -(53 + 267) ]=v23() -(2^16) ;v107[576 -(426 + 146) ]=v22();break;end end end v121=1 + 0 ;end  
  if (v121~=1) then else v104=1458 -(282 + 1174) ;break;end end break;end end end if (v104==(814 -(569 + 242))) then if (v20(v106,985 -(18 + 964) ,8 -5 )~=(1 + 0)) then  
  else v107[1 + 3 ]=v58[v107[1028 -(706 + 318) ]];end v53[v92]=v107;break;end end break;end if (v103==(850 -(20 + 830))) then local v110=0 + 0 ;while true do if ((1252 - 
  (721 + 530))~=v110) then else v103=1272 -(945 + 326) ;break;end if (v110~=0) then else v104=0;v105=nil;v110=739 -(542 + 196) ;end end end end end end for v94=1 -0 ,v23 
  () do v54[v94-(2 -1) ]=v28();end return v56;end if (v52==(0 + 0)) then local v88=0;while true do if (v88==(1 + 0)) then v55={};v56={v53,v54,nil,v55};v88=2;end if ((1088  
  -(461 + 625))~=v88) then else v52=1;break;end if (v88~=(0 + 0)) then else v53={};v54={};v88=1;end end end end end local function v29(v59,v60,v61) local v62=v59[1];local  
  v63=v59[2];local v64=v59[3];return function(...) local v65=v62;local v66=v63;local v67=v64;local v68=v27;local v69=1;local v70= -1;local v71={};local v72={...};local v73 
  =v12("#",...) -1 ;local v74={};local v75={};for v84=0,v73 do if (v84>=v67) then v71[v84-v67 ]=v72[v84 + 1 ];else v75[v84]=v72[v84 + 1 ];end end local v76=(v73-v67) + 1 ; 
  local v77;local v78;while true do local v85=0;while true do if (v85==1) then if (v78<=40) then if (v78<=19) then if (v78<=9) then if (v78<=4) then if (v78<=1) then if (  
  v78==0) then local v127=0;local v128;while true do if (v127==0) then v128=v77[2];do return v75[v128](v13(v75,v128 + 1 ,v70));end break;end end else local v129=0;local    
  v130;local v131;while true do if (v129==1) then v75[v130 + 1 ]=v131;v75[v130]=v131[v77[4]];break;end if (v129==0) then v130=v77[2];v131=v75[v77[3]];v129=1;end end end    
  elseif (v78<=2) then if  not v75[v77[2]] then v69=v69 + 1 ;else v69=v77[3];end elseif (v78==3) then if (v77[2]==v75[v77[4]]) then v69=v69 + 1 ;else v69=v77[3];end elseif 
    not v75[v77[2]] then v69=v69 + 1 ;else v69=v77[3];end elseif (v78<=6) then if (v78==5) then v75[v77[2]]=v77[3]~=0 ;elseif (v75[v77[2]]==v77[4]) then v69=v69 + 1 ;else  
  v69=v77[3];end elseif (v78<=7) then local v133=v77[2];v75[v133]=v75[v133](v75[v133 + 1 ]);elseif (v78>8) then v75[v77[2]]=v75[v77[3]][v77[4]];elseif v75[v77[2]] then v69 
  =v69 + 1 ;else v69=v77[3];end elseif (v78<=14) then if (v78<=11) then if (v78>10) then v75[v77[2]]=v60[v77[3]];else local v137=v77[2];v75[v137](v13(v75,v137 + 1 ,v77[3]) 
  );end elseif (v78<=12) then v75[v77[2]]=v60[v77[3]];elseif (v78==13) then local v209=0;local v210;while true do if (0==v209) then v210=v77[2];v75[v210]=v75[v210](v13(v75 
  ,v210 + 1 ,v70));break;end end else v75[v77[2]]=v75[v77[3]];end elseif (v78<=16) then if (v78>15) then v75[v77[2]]={};else do return v75[v77[2]];end end elseif (v78<=17) 
   then local v141=0;local v142;while true do if (v141==0) then v142=v77[2];v75[v142]=v75[v142]();break;end end elseif (v78>18) then local v213=v77[2];local v214,v215=   
  v68(v75[v213](v13(v75,v213 + 1 ,v77[3])));v70=(v215 + v213) -1 ;local v216=0;for v286=v213,v70 do v216=v216 + 1 ;v75[v286]=v214[v216];end else local v217=0;local v218; 
  local v219;local v220;while true do if (v217==0) then v218=v77[2];v219={v75[v218](v75[v218 + 1 ])};v217=1;end if (1==v217) then v220=0;for v352=v218,v77[4] do local    
    v353=0;while true do if (v353==0) then v220=v220 + 1 ;v75[v352]=v219[v220];break;end end end break;end end end elseif (v78<=29) then if (v78<=24) then if (v78<=21)   
    then if (v78>20) then v75[v77[2]]=v61[v77[3]];else local v145=0;local v146;local v147;while true do if (v145==0) then v146=v77[2];v147={};v145=1;end if (v145==1)     
    then for v321=1, #v74 do local v322=v74[v321];for v333=0, #v322 do local v334=0;local v335;local v336;local v337;while true do if (v334==0) then v335=v322[v333];v336 
    =v335[1];v334=1;end if (v334==1) then v337=v335[2];if ((v336==v75) and (v337>=v146)) then local v390=0;while true do if (v390==0) then v147[v337]=v336[v337];v335[1]= 
      v147;break;end end end break;end end end end break;end end end elseif (v78<=22) then v61[v77[3]]=v75[v77[2]];elseif (v78>23) then v75[v77[2]]=v77[3];else v60[v77 
      [3]]=v75[v77[2]];end elseif (v78<=26) then if (v78==25) then local v150=v77[2];local v151=v75[v150];local v152=v77[3];for v197=1,v152 do v151[v197]=v75[v150 +    
      v197 ];end else local v153=v77[2];do return v13(v75,v153,v70);end end elseif (v78<=27) then local v154=v77[2];v75[v154](v13(v75,v154 + 1 ,v70));elseif (v78>28)   
        then local v225=v77[2];do return v75[v225](v13(v75,v225 + 1 ,v77[3]));end else v75[v77[2]]=v29(v66[v77[3]],nil,v61);end elseif (v78<=34) then if (v78<=31) then 
         if (v78>30) then v75[v77[2]]=v75[v77[3]];else v75[v77[2]][v77[3]]=v77[4];end elseif (v78<=32) then local v159=v77[2];v75[v159]=v75[v159](v13(v75,v159 + 1 ,v70 
        ));elseif (v78==33) then v60[v77[3]]=v75[v77[2]];else v75[v77[2]][v77[3]]=v75[v77[4]];end elseif (v78<=37) then if (v78<=35) then if v75[v77[2]] then v69=v69 + 
           1 ;else v69=v77[3];end elseif (v78>36) then v75[v77[2]]=v61[v77[3]];else v75[v77[2]]();end elseif (v78<=38) then local v161=v77[2];v75[v161](v13(v75,v161  
            + 1 ,v70));elseif (v78==39) then if (v75[v77[2]]<v77[4]) then v69=v69 + 1 ;else v69=v77[3];end elseif (v75[v77[2]]==v77[4]) then v69=v69 + 1 ;else v69=   
              v77[3];end elseif (v78<=60) then if (v78<=50) then if (v78<=45) then if (v78<=42) then if (v78==41) then if (v75[v77[2]]<v77[4]) then v69=v69 + 1 ;else 
                 v69=v77[3];end else local v162=0;local v163;while true do if (v162==0) then v163=v77[2];do return v75[v163](v13(v75,v163 + 1 ,v77[3]));end break;end 
                   end end elseif (v78<=43) then local v164=0;local v165;while true do if (v164==0) then v165=v77[2];v75[v165]=v75[v165]();break;end end elseif (   
                      v78>44) then v75[v77[2]]=v77[3];else local v237=0;local v238;local v239;local v240;local v241;while true do if (v237==1) then v70=(v240 +     
                                  v238) -1 ;v241=0;v237=2;end if (v237==0) then v238=v77[2];v239,v240=v68(v75[v238](v13(v75,v238 + 1 ,v77[3])));v237=1;end if (v237 
                                      ==2) then for v354=v238,v70 do v241=v241 + 1 ;v75[v354]=v239[v241];end break;end end end elseif (v78<=47) then if (v78>46)    
                                      then local v166=0;local v167;local v168;while true do if (            v166==1) then v75[v167 + 1 ]=v168;v75[v167]=v168[v77[4] 
                                      ];break;end if (v166==0) then v167=v77[2];v168=v75[v77[3]];           v166=1;end end else v75[v77[2]]();end elseif (v78<=48 
                                      ) then v75[v77[2]]=v75[v77[3]] -v77[4] ;elseif (v78==49) then          local v242=0;local v243;while true do if (0==v242)   
                                      then v243=v77[2];do return v13(v75,v243,v243 + v77[3] );end           break;end end else v75[v77[2]][v77[3]]=v77[4];end     
                                      elseif (v78<=55) then if (v78<=52) then if (v78==51) then v61           [v77[3]]=v75[v77[2]];else local v172=v77[2];v75[    
                                      v172](v75[v172 + 1 ]);end elseif (v78<=53) then v75[v77[2]][            v77[3]]=v75[v77[4]];elseif (v78>54) then local v246 
                                      =v66[v77[3]];local v247;local v248={};v247=v10({},{__index=             function(v298,v299) local v300=0;local v301;while 
                                         true do if (v300==0) then v301=v248[v299];return v301[1][            v301[2]];end end end,__newindex=function(v302,    
                                        v303,v304) local v305=0;local v306;while true do if (v305==             0) then v306=v248[v303];v306[1][v306[2]]=v304;  
                                        break;end end end});for v307=1,v77[4] do v69=v69 + 1 ;local              v308=v65[v69];if (v308[1]==31) then v248[    
                                        v307-1 ]={v75,v308[3]};else v248[v307-1 ]={v60,v308[3]};                end v74[ #v74 + 1 ]=v248;end v75[v77[2]]=v29( 
                                        v246,v247,v61);else local v250=0;local v251;while true do                  if (v250==0) then v251=v77[2];v75[v251]= 
                                        v75[v251](v75[v251 + 1 ]);break;end end end elseif (v78<=                 57) then if (v78==56) then v75[v77[2]]=   
                                          v29(v66[v77[3]],nil,v61);else v75[v77[2]]=v75[v77[3]] -                   v77[4] ;end elseif (v78<=58) then v75 
                                          [v77[2]]=v77[3]~=0 ;v69=v69 + 1 ;elseif (v78>59) then                        do return;end else local v252= 
                                            v77[2];v75[v252](v13(v75,v252 + 1 ,v77[3]));end                             elseif (v78<=70) then if  
                                            (v78<=65) then if (v78<=62) then if (v78>61) then                                  local v178 
                                              =0;local v179;local v180;local v181;while     
                                                true do if (v178==0) then v179=v77[2];    
                                                    v180=v75[v179];v178=1;end if (1==   
                                                          v178) then v181=v77[3]; 


--------------------------------------------------------------------------------
for v325=1,v181 do v180[v325]=v75[v179 + v325 ];end break;end end else local v182=v77[2];v75[v182]=v75[v182](v13(v75,v182 + 1 ,v77[3]));end elseif (v78<=63) then local v184=v77[2];local v185=v75[v184];for v200=v184 + 1 ,v77[3] do v7(v185,v75[v200]);end elseif (v78==64) then local v253=0;local v254;local v255;local v256;while true do if (v253==1) then v256={};v255=v10({},{__index=function(v360,v361) local v362=0;local v363;while true do if (v362==0) then v363=v256[v361];return v363[1][v363[2]];end end end,__newindex=function(v364,v365,v366) local v367=v256[v365];v367[1][v367[2]]=v366;end});v253=2;end if (v253==2) then for v369=1,v77[4] do local v370=0;local v371;while true do if (v370==0) then v69=v69 + 1 ;v371=v65[v69];v370=1;end if (v370==1) then if (v371[1]==31) then v256[v369-1 ]={v75,v371[3]};else v256[v369-1 ]={v60,v371[3]};end v74[ #v74 + 1 ]=v256;break;end end end v75[v77[2]]=v29(v254,v255,v61);break;end if (v253==0) then v254=v66[v77[3]];v255=nil;v253=1;end end else v69=v77[3];end elseif (v78<=67) then if (v78==66) then v75[v77[2]]={};else local v187=v77[2];local v188={};for v201=1, #v74 do local v202=v74[v201];for v258=0, #v202 do local v259=0;local v260;local v261;local v262;while true do if (0==v259) then v260=v202[v258];v261=v260[1];v259=1;end if (1==v259) then v262=v260[2];if ((v261==v75) and (v262>=v187)) then v188[v262]=v261[v262];v260[1]=v188;end break;end end end end end elseif (v78<=68) then v75[v77[2]]=v75[v77[3]][v77[4]];elseif (v78>69) then local v263=0;local v264;local v265;local v266;while true do if (0==v263) then v264=v77[2];v265={v75[v264](v75[v264 + 1 ])};v263=1;end if (v263==1) then v266=0;for v372=v264,v77[4] do v266=v266 + 1 ;v75[v372]=v265[v266];end break;end end else v75[v77[2]]=v77[3]~=0 ;end elseif (v78<=75) then if (v78<=72) then if (v78>71) then v69=v77[3];else v75[v77[2]]=v77[3]~=0 ;v69=v69 + 1 ;end elseif (v78<=73) then local v193=0;local v194;while true do if (v193==0) then v194=v77[2];v75[v194]=v75[v194](v13(v75,v194 + 1 ,v77[3]));break;end end elseif (v78==74) then do return v75[v77[2]];end else do return;end end elseif (v78<=78) then if (v78<=76) then local v195=0;local v196;while true do if (v195==0) then v196=v77[2];v75[v196](v75[v196 + 1 ]);break;end end elseif (v78>77) then local v268=0;local v269;while true do if (v268==0) then v269=v77[2];do return v75[v269](v13(v75,v269 + 1 ,v70));end break;end end else local v270=0;local v271;while true do if (v270==0) then v271=v77[2];do return v13(v75,v271,v70);end break;end end end elseif (v78<=79) then for v203=v77[2],v77[3] do v75[v203]=nil;end elseif (v78==80) then for v316=v77[2],v77[3] do v75[v316]=nil;end elseif (v77[2]==v75[v77[4]]) then v69=v69 + 1 ;else v69=v77[3];end v69=v69 + 1 ;break;end if (v85==0) then v77=v65[v69];v78=v77[1];v85=1;end end end end;end return v29(v28(),{},v17)(...);end return vv9(),...);